/*******************************************************************************
 FX Data resource file.
********************************************************************************

 Run this file through the fx-data.py Python script (drag and drop) to create
 a c-style header file that can be included with your project.
 
 a .bin file will also be created containing the actual resource data. This .bin
 file can be uploaded to the FX flash chip using the uploader-gui.py Python
 script (Use Upload Development data button).
 
 The .bin file can also be uploaded to FX flash chip using the flash-writer.py
 Python command line script using the -d switch.
 
 Data types:
  
 int8_t, uint8_t   values will be stored as 8-bit bytes (unsigned char)
 
 int16_t, uint16_t values will be stored as 16-bit (half)words (int)
 
 int24_t,uint24_t   values will be stored as 24-bit address that points to
                    a FX data resource
 
 int32_t,uint32_t   values will be stored as 32-bit long words
 
 image_t            a filename with a relative path to a .bmp or .png image file
 raw_t              a filename with a relative path to a raw file
 
 to create a constant to point to a FX resource, a similar format as in C(++):
 is used. 

    image_t FXlogo   = "FX-logo.png";
    image_t FxSprite = "FXSprite.png";
  
 when data of the same format is used the data type may be ommited. The semicolon
 may also be ommited in all cases.

    image_t FXlogo   = "FX-logo.png"
            FxSprite = "FXSprite.png"
 
 or even:
 
    image_t FXlogo   = "FX-logo.png", FxSprite = "FXSprite.png"
 
 When specifying multiple data make sure they are seperated by at least a space
 (comma is optional). A data array can be simplified. For examle:
 
    uint8_t tilemap[] = {
      0, 1, 2, 3, 4, 5, 6
    };
 
 can also be written simply as:
 
    uint8_t tilemap = 0 1 2 3 4 5 6

  data can be commented out using // for a single line or
  using /* */ for a block comment

********************************************************************************
  basic example :
*******************************************************************************/

//convert +append floor*.png nasty*.png wall*.png conveyor*.png key*.png crumbing_floor*png switch*.png tiles_8x8.png

// Arduboy FX logo image:

image_t tiles = "../assets/tiles_8x8.png"

image_t portals = "../assets/portals_16x16.png"


image_t player_gfx = "../assets/player_16x16.png"

image_t guardians_h_gfx = "../assets/guardians_h_16x16.png"


uint8_t tilemap[] = {
0, 1, 10, 3, 4, 5, 6, 8
};

uint8_t Level_1 = {
25, 0,  0,  0,  0,  0,  0,  0,  0,  79,  0, 22,  0,  0,  0,  0, 22,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 79,  0, 25,
25, 0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0,  0,  0,  0,  0, 79,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25, 0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25, 0,  0,  0,  0,  0,  0,  0,  0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,

25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  0,  0,  0, 13, 79,  0,  0, 25,
25,  1,  1,  1,  1,  1,  1,  1 , 1,  1,  1,  1,  1,  1, 90, 90, 90, 90,  1, 90, 90, 90, 90,  1,  1,  1,  1,  1,  1,  1,  1, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 79, 25,
25,  1,  1,  1,  0,  0,  0,  0,200,  0,  0,  0,  0,  0,  0,201,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
   
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 25, 25,  0, 13,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25,  1,  1,  1,  1,  0,  0,  0, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,  0,  0,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
    
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 13,  0,  0,  0,  0,  0,  0,  0, 25, 25, 25, 90, 90, 90, 90, 90,  1,  1,  1, 25,
25,250  ,0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,150,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 25
     
};

uint8_t Level_2 = {
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
25,  0,  0,  0,  0,  0,  0, 80,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 80,  0,  0,  0,  0,  0,23, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,203,  0,  0,  0,  0,  0,202,  0,  0, 90, 90, 90,  1,  0,  0,  0,  0,  0,  0, 25,

25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25,  1,  1,  1,  1,  1,  1,  1 , 1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0, 25,  0,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1, 25, 90, 90, 25,  0,  0, 25,
25,  1, 90, 90, 90, 90, 90,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 90, 90, 25,  0,  0, 25,
    
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 90, 90, 25,  0,  0, 25,
25,  0,  0, 80,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 90, 90, 25,  0,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 90, 90, 90, 90,  0,  0, 25, 90, 90, 25,  0,  0, 25,
25,  0,  0, 39, 39, 39, 39,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25, 90, 90, 25,  0,  0, 25,
    
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0, 80,  0,  0,  0,  0,  0, 25, 90, 90, 25,  0,  0, 25,
25,250,201,  0,  0,  0,  0,  0, 90, 90, 90, 90,  0,  0,  0,  0,  0,  0,200,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,150,  0, 25,
25,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 25,
25,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 25
 
};

